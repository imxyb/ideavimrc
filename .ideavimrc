let mapleader=' '

set hlsearch
set incsearch
set ignorecase
set smartcase
set showmode
set number
set relativenumber
set scrolloff=999
set history=100000
set clipboard=unnamed
set surround
set multiple-cursors
set keep-english-in-normal

" clear the highlighted search result
nnoremap <Leader>sc :nohlsearch<CR>

" quick get declaration
nnoremap gd :action GotoDeclaration<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gp :action GotoSuperMethod<CR>

" quick search every where
nnoremap <Leader>ss :action SearchEverywhere<CR>

" quick action
nnormap <Leader>ga :action GoToAction<CR>

" project search
nnoremap <Leader>gf :action GotoFile<CR>
nnoremap <Leader>gs :action GotoSymbol<CR>
nnoremap <Leader>fp :action FindInPath<CR>
nnoremap <Leader>ee :action RecentFiles<CR>

" get usage
nnoremap <Leader>fu :action FindUsages<CR>
nnoremap <Leader>su :action ShowUsages<CR>

" Quit insert mode
vnoremap v <Esc>

" Move to the start of line
nnoremap H ^
" Move to the end of line
nnoremap L $
" Redo
nnoremap U <C-r>
" Yank to the end of line
nnoremap Y y$

" built in search looks better
nnoremap / :action Find<CR>
" but preserve ideavim search
nnoremap <Leader>/ /

" comment
nnoremap <Leader>;; :action CommentByLineComment<CR>

" Debug
nnoremap <Leader>bb :action ToggleLineBreakpoint<CR>
nnoremap <Leader>br :action ViewBreakpoints<CR>

" view mode
nnoremap <Leader>cv :action ChangeView<CR>

" inspect code
nnoremap <Leader>ic :action InspectCode<CR>

" optimize
nnoremap == :action ReformatCode<CR>
nnoremap -- :action OptimizeImports<CR>

" rename
nnoremap <Leader>re :action RenameElement<CR>
nnoremap <Leader>rf :action RenameFile<CR>

" jump
nnoremap <Leader>kk :action KJumpAction<CR>
nnoremap <Leader>kl :action KJumpAction.Line<CR>

" show error
nmap <Leader>ed :action ShowErrorDescription<CR>

" disable in insert mode
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" bookmark
nnoremap mm :action ToggleBookmark0<CR>
nnoremap `m :action GotoBookmark0<CR>

" jump the quote such as '(' or '}'
inoremap <C-CR> <esc>la

" jump to last change
nnoremap <Leader>lc :action JumpToLastChange<CR>

" show intention actions
nnoremap <Leader>sa :action ShowIntentionActions<CR>

" next or prev method
nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

" show history 
nnoremap <Leader>sh :action LocalHistory.ShowHistory<CR>

" Run 
nnoremap <Leader>rr :action Run<CR>
nnoremap <Leader>rc :action RunConfiguration<CR>

